include:
  - gitlab-ci/variables/build-var-sets.yml

.build_test_install_xyce:
  extends: .build_base
  stage: buildTestInstallXyce
  dependencies: []
  variables:
    GoogleUnitTesting: "OFF"
    BuildWithMPI: "OFF"
    cmakeBuildType: "Release"
    # variables for xyce-ctest.cmake. typically do NOT want to modify
    # these
    branch: ${XyceBranch}
    TESTSET: Experimental
    WORKSPACE: $CI_PROJECT_DIR
    GTest_ROOT: /projects/xyce/GTest/RHEL7
    cmakeArgsList: |
      --log-level=STATUS;\
      -DXyce_REGRESSION=ON;\
      -DFLEX_ROOT=/projects/xyce/flexbison;\
      -DBISON_ROOT=/projects/xyce/flexbison;\
      -DXyce_USE_FFT=ON;\
      -DXyce_PLUGIN_SUPPORT=ON;\
      -DBUILD_SHARED_LIBS=ON;\
      -DCMAKE_BUILD_TYPE=${cmakeBuildType};\
      -DBUILD_TESTING=ON;\
      -DXyce_GTEST_UNIT_TESTS=${GoogleUnitTesting};\
      -DXyce_PARALLEL_MPI=${BuildWithMPI};\
      -DXyce_RAD_MODELS=ON;\
      -DXyce_USE_CURL=ON;\
      -DXyce_TRACKING_URL=http://morannon.sandia.gov/Xyce_Stats/cgi-bin/collectstats.pl;\
      -DXyce_AS_SPECIAL_CHARON_TPL=OFF;\
      -DCMAKE_INSTALL_PREFIX=${xyceInstallDir}
      
  script:
    - set -e
    - cloneAllXyceRepos
    # so admsXml will be found
    - export PATH="${PATH}:${admsInstallDir}/${optStr}/bin"
    # remove backslashes and newline characters from list for proper
    # parsing by ctest script
    - rawCmakeArgsList="$(echo ${cmakeArgsList} | tr -d '\\\n')"
    # this appears on the dashboard under "Build Name"
    - export MYBUILDNAME=Xyce/${XYCE_INSTALL_STRING}/${optStr}/${libTypeStr}-${archFullName}
    - echo "MYBUILDNAME=${MYBUILDNAME}"
    # only doing links against dynamic libraries for now
    - export Trilinos_DIR=${trilinosInstallDir}/${optStr}/${libTypeStr}
    - echo "Trilinos_DIR=${Trilinos_DIR}"
    # note use of the use of the pipeline's xyce-ctest.cmake file, NOT
    # the build repos copy
    - ctest --timeout 600 -DVERBOSITY=5
        -DUSE_GITLAB_CI_TESTING=ON
        -DCMAKE_ARGS_LIST="${rawCmakeArgsList}"
        -S ${CI_PROJECT_DIR}/cmake/ctest/xyce-ctest.cmake 2>&1 | tee ${CI_PROJECT_DIR}/logFiles/xyce-ctest-log.txt
    # clean out the installation directory
    - cleanInstallDir "${xyceInstallDir}"
    - cmake --install ${CI_PROJECT_DIR}/repos/build
  artifacts:
    paths:
      - logFiles
    expire_in: 1 day
  rules:
    - if: $DO_XYCE_BUILDS == "ON" && $CI_PIPELINE_SOURCE == "trigger"
  
# Begin concrete gitlab CI stages
GNU_serial.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce
    - .gnu_serial_vars

GNU_OpenMPI.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce
    - .gnu_openmpi_vars

GNU_OpenMPI.Debug.buildTestInstallXyce:
  variables:
     cmakeBuildType: "Debug"
  extends:
     - .build_test_install_xyce
     - .gnu_openmpi_vars

Intel_serial.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce
    - .intel_serial_vars

Intel_OpenMPI.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce
    - .intel_openmpi_vars

.build_test_install_xyce_cts:
  extends: .build_test_install_xyce
  script:
    - set -e
    - cloneAllXyceRepos
    # this appears on the dashboard under "Build Name"
    - export MYBUILDNAME=Xyce/${XYCE_INSTALL_STRING}/${optStr}/${libTypeStr}-${archFullName}
    - echo "MYBUILDNAME=${MYBUILDNAME}"
    # only doing links against dynamic libraries for now
    - export Trilinos_DIR=${trilinosInstallDir}/${optStr}/${libTypeStr}
    - echo "Trilinos_DIR=${Trilinos_DIR}"
    # so admsXml will be found
    - export PATH="${PATH}:${admsInstallDir}/${optStr}/bin"
    - rawCmakeArgsList="$(echo ${cmakeArgsList} | tr -d '\\\\\n')"
    - |
      case $(hostname) in
        flight*)
          SBATCH_EXTRA_ARGS="--reservation=condo-ascic-ci ${CTS_LICENSE_ARG}"
          ;;
        *)
          SBATCH_EXTRA_ARGS="${CTS_LICENSE_ARG}"
          ;;
      esac
    - echo "Trilinos_DIR=${Trilinos_DIR}"
    - sbatch ${SBATCH_EXTRA_ARGS}
        --wait
        --time=3:59:00
        --job-name=xyce_ci
        --account=FY200136
        --partition=short,batch
        ${CI_PROJECT_DIR}/gitlab-ci/cts-sbatch-ctest.sh "${rawCmakeArgsList}" "${xyceInstallDir}" "${CI_PROJECT_DIR}"
    # clean out the installation directory
    - cleanInstallDir "${xyceInstallDir}"
    - cmake --install ${CI_PROJECT_DIR}/repos/build

GNU_OpenMPI.cts.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce_cts
    - .gnu_openmpi_cts_vars

GNU_serial.cts.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce_cts
    - .gnu_serial_cts_vars

Intel_OpenMPI.cts.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce_cts
    - .intel_openmpi_cts_vars

Intel_serial.cts.buildTestInstallXyce:
  extends:
    - .build_test_install_xyce_cts
    - .intel_serial_cts_vars
