// ********************************************************
// **** BSIM-CMG 107.0.0 released by Navid, Juan and Sriramkumar on 07/12/2013 ****/
// *  BSIM Common Multi-Gate Model Equations (Verilog-A)
// ********************************************************
//
// ********************************************************
// * Copyright 2012 Regents of the University of California. 
// * All rights reserved.
// *
// * Project Director: Prof. Chenming Hu.
// * Authors: Sriramkumar V., Navid Paydavosi, Juan Duarte, Darsen Lu, 
// *          Chung-Hsun Lin, Mohan Dunga, Shijing Yao,
// *          Ali Niknejad, Chenming Hu
// ********************************************************
// ********************************************************
// *   NONDISCLOSURE STATEMENT
// Software is distributed as is, completely without warranty or service
// support. The University of California and its employees are not liable
// for the condition or performance of the software.
// The University of California owns the copyright and grants users a perpetual,
// irrevocable, worldwide, non-exclusive, royalty-free license with 
// respect to the software as set forth below.
// The University of California hereby disclaims all implied warranties.
// The University of California grants the users the right to modify, copy,
// and redistribute the software and documentation, both within the user's
// organization and externally, subject to the following restrictions
// 1. The users agree not to charge for the University of California code
// itself but may charge for additions, extensions, or support.
// 2. In any product based on the software, the users agree to acknowledge
// the University of California that developed the software. This
// acknowledgment shall appear in the product documentation.
// 3. The users agree to obey all U.S. Government restrictions governing
// redistribution or export of the software.
// 4. The users agree to reproduce any copyright notice which appears on
// the software on any copy or modification of such made available
// to others
// Agreed to on __Sept. 11, 2012_________________
// By: ___University of California, Berkeley____ 
//     ___Chenming Hu_____________________ 
//     ___Professor in Graduate School _______
// ********************************************************
// *** Quasi Static CV Model *** 
if(NGATE_i > 0) begin
	idscv  =  2.0 * cpoly * Tcom / 3.0 + kpoly * qia + (2.0 - etaiv) * nVtm;
end else begin
	idscv  =  qia + (2.0 - etaiv)* nVtm;
end

idscv = idscv / DvsatCV;

beta_cv = u0 * coxeff * WeffCV / LeffCV;

// Short Channel CV Model
dqi_idscv = dqi / idscv;

//Qg calculation
if(NGATE_i > 0) begin
	T1 =  (kpoly + 4.0 * cpoly * qia);
end else begin
	T1 =  1.0;
end

qg =  qia +  T1 * dqi * dqi_idscv / 12.0;

//Qd calculation
if(NGATE_i > 0) begin
	T1 =  15.0 * kpoly + cpoly*(32.0 * qid + 28.0 *qis);
	T2 =  63.0 * kpoly*kpoly + 126.0*cpoly*kpoly*qia + cpoly*cpoly*(256.0*Tcom + 240.0*qis*qid);
end else begin
	T1 =  15.0;
	T2 =  63.0;
end

qd =  0.5*qia - dqi * (1.0 -  T1 * dqi_idscv / 30.0 -  T2 * dqi_idscv * dqi_idscv / 1260.0)/12.0;	

// Including CLM in qg and qd
inv_MclmCV = 1.0 / MclmCV;
qg         = inv_MclmCV * qg + (MclmCV - 1.0) * qid;
qd         = inv_MclmCV * inv_MclmCV * qd + 0.5 * (MclmCV - inv_MclmCV) * qid;

//Calculating partition for NQSMOD2
`ifdef __NQSMOD2__
if(NQSMOD == 2)    xdpart  =  qd / qg;
else    	       xdpart  =  0;				
`endif

// *** Multiply Normalized capacitances by gate area ***
T1   =  WeffCV * LeffCV * coxeff;
qinv =  NFINtotal * qg * T1;               //Also used for TNOIMOD=0
qd   =  NFINtotal * qd * T1;
qg   =  qinv - NFINtotal * qb;

// *** add sign to nodal charge***
qd =  -qd;
qb =  + NFINtotal * qb; //qb is already the correct sign
qs =  -qg - qd - qb;

// if vds is negative, physical charge on d is qs
if (sigvds < 0) begin
	T1 =  qd;
	qd =  qs; 	
	qs =  T1;
end

